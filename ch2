What is graph databse : 
A graph is an abstract data type typically used to model data that contains objects (referred to as nodes or vertices), and some sort of relationship between those objects (lines or edges).

A graph database is essentially a collection of nodes and edges. 
Each node represents an entity (such as a person or business) and each edge represents a connection or relationship between two nodes. 
Every node in a graph database is defined by a unique identifier, a set of outgoing edges and/or incoming edges and a set of properties expressed as key/value pairs.
Each edge is defined by a unique identifier, a starting-place and/or ending-place node and a set of properties.

These properties correspond to the columns in a relational database.
Edges are use to describe the relationships between the objects contained in the database, 
and in most they can be compared to the foreign key column of a row in a RDBMS.
Graph database is a nosql database structure.
//graph database phtoto.


Why Graph Databases?

We live in a connected world! There are no isolated pieces of information, but rich, connected domains all around us.
Most of the data exists in the form of the relationship between different objects and more often, 
the relationship between the data is more valuable than the data itself. 
Only a database that natively embraces relationships is able to store, process, and query connections efficiently.
While other databases compute relationships at query time through expensive JOIN operations, 
a graph database stores connections alongside the data in the model.

Accessing nodes and relationships in a native graph database is an efficient, constant-time operation and allows 
you to quickly traverse millions of connections per second per core.

Independent of the total size of your dataset, graph databases excel at managing highly-connected data and complex queries
. With only a pattern and a set of starting points, graph databases explore the neighboring data around those initial starting points — collecting and aggregating information from millions of nodes and relationships — and leaving any data outside the search perimeter untouched.
Graph databases, by design, allow simple and fast retrieval of complex hierarchical structures that are difficult to 
model in relational systems. 


1.3 Graph as NoSQL Structure : 

NoSQL means Not Only SQL, is a whole new way of thinking about a database.
It is an approach to  non-relational data management and database design that’s useful for
 distributed data stores where very large scale of unstructured data storing needs.
 It encompasses a wide range of technologies and architectures
 

1.3.1 Brewer’s CAP theorem 
CAP theorem — Relates to NoSQL

CAP theorem tries to demonstrate the properties expected by a NoSQL database. 
Most of the databases are designed to achieve two of these properties at the cost of another property.

C — Consistency

When performing an operation you always have to receive the same information, regardless the node that process the order. It means that no matter which node that forms our Database receives an order, everyone must respond to the operation equally and must be transparent to us who effected it. All clients see the same version of data.

A — Availability
The system provides answers for all requests it receives, even if one or more nodes are down.

P — Partition tolerance

The system still Works even though it has been divided by a network failure.


1.3.2 Types of NoSQL Databases

NoSQL databases are guaranteed to adhere to two of the CAP properties. Such databases are of several types.

    Key-Value Store — Stores in the form of a hash table {Example- Riak, Amazon S3 (Dynamo), Redis}
   example-
    Key	    Value
    “India”	{“B-25, Sector-58, Noida, India – 201301”
    
    Document-based Store — Stores objects, mostly JSON, which is web friendly or supports ODM (Object Document Mappings). {Example- CouchDB, MongoDB}
     
    {officeName:”3Pillar Noida”, 
    {Street: “B-25, City:”Noida”, State:”UP”, Pincode:”201301”}
     }
     
    Column-based Store — Each storage block contains data from only one column {Example- HBase, Cassandra}
    //image p1 will be here
    
    Graph-based — Graph representation of relationships, mostly used by social networks. {Example- Neo4J}
    //image person-city will be here

// Neo4j types photo

1.3.3 SQL vs NoSQL
//image 
// https://www.janbasktraining.com/blog/sql-vs-nosql/
// combine tables



The trouble to visualise the relationship between entities in a Relational Database is a 
is overcomed with the help of graphical representation of graph databases.
The most modern Graph Databases also offer advantages in performance, since they use NoSQL based storage mechanisms. 
In this way, these databases became scalable and can be distributed to several processing cores in the cloud.
The most popular Graph Databases with this kind of approach are Neo4J, OrientDB and TitanDB.



2.1 What is Neo4j?

Neo4J is the first and most popular native Graph Database according to DB Engines website
Neo4j is an open-source implemented in Java ,it has its own query language called Cypher and  provides an ACID-compliant transactional backend for applications.
In native graph storage data is stored as graph on disk, the unit is vertex and edge. 
Initial development of Neo4j began in 2003, but it has been publicly available since 2007. 

Some of the following particular features make Neo4j very popular among developers, architects, and DBAs:

    #Cypher, a declarative query language similar to SQL, but optimized for graphs.
         
     #Constant time traversals in big graphs for both depth and breadth due to efficient representation of nodes and relationships.
              Enables scale-up to billions of nodes on moderate hardware.
    
    #Flexible property graph schema that can adapt over time, making it possible to materialize and add new relationships later to shortcut and speed up the domain data when the business needs change.
    
    # Drivers for popular programming languages, including Java, JavaScript, .NET, Python, and many more.

2.2 Why Neo4j ?
1.Neo4j’s First Mover Advantage is Connecting Everyone to Graphs
2.Biggest and Most Active Graph Community .
3.Highly Performant Read and Write Scalability, Without Compromise
4.Easy to Learn
	  -Mature UI with intuitive interaction and built-in learning
   -A wealth of training materials bringing years of deployment experience to your desktop
5. Easy to use  .
6. Easier than Ever to Load Your Data into Neo4j .

2.3 Property Graph Model  :

THe key component of Graph Database are : 
1. Nodes  - are the entities in the graph. They can hold any number of attributes (key-value pairs) called properties. Nodes can be tagged with labels, representing their different roles in your domain. 
Node labels may also serve to attach metadata (such as index or constraint information) to certain nodes.

2. Relationships  :  provide directed, named, semantically-relevant connections between two node entities (e.g. Employee WORKS_FOR Company). A relationship always has a direction, a type, a start node, and an end node. Like nodes, relationships can also have properties. In most cases, 
relationships have quantitative properties, such as weights, costs, distances, ratings, time intervals, or strengths.

3.Labels. These are used to group nodes, and each node can be assigned multiple labels. 
	Labels are indexed to speed up finding nodes in a graph.
	
4.Properties. These are attributes of both nodes and relationships. 
      Neo4j allows for storing data as key-value pairs, which means properties can have any value (string, number, or boolean).
// property -model image

2.4 Cypher :Querying data from Neo4j
Cypher is a relatively simple but still very powerful language. 
Very complicated database queries can easily be expressed through Cypher. 
This allows you to focus on your domain instead of getting lost in database access. 
Our guiding goal is to make the simple things easy, and the complex things possible.
Cypher focuses on the clarity of expressing what to retrieve from a graph, not on how to retrieve it. 

Neo4j is linguistically efficient than SQL.
Example-
SQL statement:

SELECT name FROM Person
LEFT JOIN Person_Department
	  ON Person.Id = Person_Department.PersonId
LEFT JOIN Department
	  ON Department.Id = Person_Department.DepartmentId
WHERE Department.name = "IT Department"


Cypher statement:

MATCH (p:Person)<-[:EMPLOYEE]-(d:Department)
WHERE d.name = "IT Department"
RETURN p.name


 Cypher query is half the length of the SQL statement and significantly simpler.
 Not only would this Cypher query be faster to create and run, but it also reduces chances for error.
 SQL not only suffers from performance issues due to the JOIN complexity 
 but will also degrade in performance as the dataset grows.
 
 
 
 //Image neo4j property



2.5 Common  Use Case  : 

Social networks

Social networks are about connections between people, so basically they have graph structures. 
Needless to say, graph databases like Neo4j are perfectly tailored to social networks. 
They speed up the development of social network applications, enhance an app’s overall performance,
and allow you to better understand your data.

Recommendation engines

It’s hard to find an online business that doesn’t use a recommendation engine to recommend relevant products or 
services to customers. A good recommendation engine should correlate a lot of data and be able to quickly detect new 
interests shown by clients.
Being focused on entities and relations between them, a Neo4j database can easily handle recommendations,
significantly outperforming other relational and non-relational databases.

Privacy and risk compliance

Neo4j facilitates personal data storage and management: it allows you to track where private information is stored and 
which systems, applications, and users access it. The graph data model helps visualize personal data and allows for data 
analysis and pattern detection. Neo4j also comes in handy for financial risk reporting and compliance.


Geo Routing – Imagine modeling the classic traveling salesman problem of trying to visit each city on a map exactly once with
the shortest route.  The data model is a map of cities and the routes between them and is already a graph. 
Applications like routing inventory, scheduling tours and geospatial analysis are more comprehensible by developers and business owners in Neo4j compared to a relational database.  
Performance also goes from “minutes to milliseconds” without relying on extra lookups to indices during retrieval.

Business Expansion

To deliver the most pleasant customer experience, businesses need to analyze lots of data. 
Graph databases help to unify master data, such as information about customers, products, suppliers, and logistics. 
Neo4j allows you to organize master data and model it in a graph, revealing connections and relationships. 
Neo4j can provide important insights so that you can make relevant business decisions.

Network and IT operation

The size and complexity of your network and IT infrastructure require a configuration management database 
(CMDB) more powerful than anything relational databases have to offer. Using Neo4j, you can correlate your network, 
data center and IT assets to help with troubleshooting, impact analysis and capacity or outage planning.


3.1 Study of Social Network Using Neo4j 
Social networking is the use of internet-based social media programs to make connections with friends, 
family, classmates, customers and clients. Social networking can occur for social purposes, business purposes or
both through sites such as Facebook, Twitter, LinkedIn etc. Social networking is also a significant target area for
marketers seeking to engage users.
With the rise of the Internet and technology, online social networks (OSNs) turned into challenging cases of study,
on which big data content and complex interpersonal ties among actors converge.
A social network can be represented by a graph, whose nodes can represent the users, and the edges the
interpersonal ties among them.
By analyzing and mining social networks, we can gather information on the
comments people make with respect to a particular product.
Analysis of such comments shows its valuable for the design of marketing
and advertising campaigns.
 One application is using  network data for user ranking by computing user’s influence 
 and signifying influence propagation in social networks. 



3.2 Classification based on Social Network
  On basis of 
     1.Topology-based social networks
	(1) Online social networks
	Online social networks (OSNs) are virtual communities which allow people to connect and
	interact with each other on a particular subject
	or to just “hang out” together online.
	(2) Mobile social networks 
	With the significant development of wireless network technologies
	(i.e., cellular network, WiFi, and Bluetooth), web-based online social
	network applications have lead to a shift from online networks to mobile networks.
	
     2. Function-based social networks	
	1.Social news: A social news website features user-posted stories
	 that are ranked based on popularity
	2.Instant messaging (IM): IM is a type of online chat platform that
	provides real-time text transmission over the Internet.
	3.Microblogging: It allows users exchange small elements of con-
	tent, such as short sentences, individual images, or video links  such as
	Twitter  is a microblogging platform, which allows registered users
	to publish short text though multiple interfaces, including Web,
	SMS, and instant messaging.
	4.Social bookmarking: It is a centralized online service that allows
	users to add, edit, annotate, and share bookmarks of web documents, such as StumbleUpon.
	5.Internet forum: It is an online discussion site where people can
	hold conversations in the form of posted messages
	6.Media sharing website: It allows users to upload, view, comment,
	and share multiple dimensions information, such as files, videos,
	photos, music, movie. For example, YouTube
	7.Social networking: It allows users to share ideas, posts, pictures,
	activities, events, and interests with people in their network,
	such as Facebook


3.3  Social Network Data(SNA) : 

Social network data is evolutionary which  comes with characteristic such as data are unstructured which comes in format like plain text, RDF, JSON, makes it difficult for users to index or load such data in a database, also they are noisy and heterogeneous in nature.
Converting social network raw data to the precise graph representation is crucial for data analytical framework to make accurate decisions and predictions.
When appropriately done, graph can captures the essential aspects of the data and abstracts away the noisy, irrelevant parts. 
Modelling the interactions between entities as graphs has enabled to understand the various network systems in a
systematic manner .

//Flowchart of heterogenous data on social


3.3 Social Influence Analysis 
Social network influence pertains to the ability of a user to change the feelings, attitudes, or
behaviors of other users in a network.
 Social influence is the impression that a person has on others or in other words,
 certain individuals in a community or network influence other participants to form views on several 
 subjects and issues.
 These individuals are called as influencers, who led the foundation of opinions, public knowledge, and attitudes.
 
// Image of influencer

Advantages of social influence analysis-
1) in terms of sociology, it is helpful to understand people’s social behaviors
2) in terms of public services, it is helpful to provide a theoretical basis for public decision making and public opinion guidance
3) in terms of country, it is also helpful to promote national
security, economic stability, economic progress, and so on.

Difficulties in social influence analysis-
1.We do not have a mathematical definition and measurement of social influence.
2. It is very difficult to decide the major factors for a specific case to social influence modeling.
3. There is no effective ways to properly integrate various factors for influence measurement
4. It is hard to characterize the causal relationship of social influence, as well as the uncertainty of social influence.
5. Moreover, in a real-world social network, the influential users cannot be determine without having prior knowledge of influential domain.
6. Human intervention is needed to justify those results even after achieving results.


Categories of Influence Analysis  :

1.1  User Based Analysis 

Users on social media are from various communities and background having different taste and choices,
while active on social networking sites.
Finding right user for specific analysis or recommendation can helps the organization to better understand 
their customers.
User based analysis mainly divided into three categories. 
A - Group of users or community where peoples are grouped based on similar interest.
They are also related to each other based on some forehand knowing criteria’s like any other communities 
in the real world e.g. college group.
B -  classification of users based on different characteristics such as behavior, preferences, etc.
C - Group of spammers.
As social networking sites do not give well-built authentication mechanisms, 
and it is quite easy to masquerade as a user and creep into a person’s network of trust whether
he is friend or not known as spammers.


1.2  Link Based Analysis



APPLICATIONS OF  SOCIAL INFLUENCER

//image of application of influencer

1.Viral Marketing
Influence dissemination patterns are useful in understanding the specific reasons behind the rapid
adoption of certain innovations. Patterns help marketers and advertisers implement effective cam-
paigns. Viral marketing depends on the assumption that the purchasing decisions of a user are
heavily influenced by the suggestions and recommendations of friends in social networks.

2.Political Movements
Politicians in modern democracies worldwide have eagerly adopted OSN platforms to engage with
users, specifically during election campaigns.Results have shown that the statement influenced
the actual voting behavior of millions of people.
3.News Spreading
The OSNs have become significant channels for broadcasting and collecting news. Influential news broadcasters can be categorized into 3 groups: individuals associated with
the media, grassroots or ordinary users, and celebrities . Official media sources
reach the majority of OSN (Twitter) users and spread most headlines daily. Opinion leaders and
celebrities can reach users distant from the core of the network.

4.Health Applications
Online social media platforms have also become substantial sources of health data. OSN website
users discuss numerous common interest topics, including health issues. For instance, Twitter is
used by patients and doctors to share their personal feelings and experiences (Zhao et al. 2014a).
Furthermore, OSNs comprise several health communities that aim to address the concerns of
patients or users regarding various diseases.

5.Spread of Opinions
Posts from influential users with influential friends would be acknowledged and expanded at a
very high rate by their followers and may rapidly spread in the network through information
dissemination . Opinion formation is the result of information dissemina-
tion among OSN users through the communication and discussion of opinions, views, and beliefs
about specific topics

6.Corporate Communication
OSN users have an accumulative influence on the business reputation of organizations. Influential
users of OSNs can spread positive or negative posts or opinions on services or products to other
OSN users. This process can significantly affect the reputation of an organization because a
post within an OSN can spread to numerous users.

7.Spread of Natural Disaster Situation Awareness
OSN platforms are abundant and real-time information sources relative to real-world events, es-
pecially during mass crises. Valuable information from OSNs can provide significant insights into
time-critical situations for the effective and timely analysis of the hazards of current emergencies
and activities

8.Rumor Restraint
Rumors cause significant social damage. Rumors have received considerable research attention
in the literature on OSNs, in which recent studies have demonstrated their rapid spread in the
OSN context
